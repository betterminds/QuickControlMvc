// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.betterminds.model;

import br.com.betterminds.model.Telefone;
import br.com.betterminds.model.TelefoneDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect TelefoneDataOnDemand_Roo_DataOnDemand {
    
    declare @type: TelefoneDataOnDemand: @Component;
    
    private Random TelefoneDataOnDemand.rnd = new SecureRandom();
    
    private List<Telefone> TelefoneDataOnDemand.data;
    
    public Telefone TelefoneDataOnDemand.getNewTransientTelefone(int index) {
        Telefone obj = new Telefone();
        setDdd(obj, index);
        setNumero(obj, index);
        setPrefixo(obj, index);
        return obj;
    }
    
    public void TelefoneDataOnDemand.setDdd(Telefone obj, int index) {
        String ddd = "dd_" + index;
        if (ddd.length() > 4) {
            ddd = ddd.substring(0, 4);
        }
        obj.setDdd(ddd);
    }
    
    public void TelefoneDataOnDemand.setNumero(Telefone obj, int index) {
        String numero = "num_" + index;
        if (numero.length() > 5) {
            numero = numero.substring(0, 5);
        }
        obj.setNumero(numero);
    }
    
    public void TelefoneDataOnDemand.setPrefixo(Telefone obj, int index) {
        String prefixo = "pre_" + index;
        if (prefixo.length() > 5) {
            prefixo = prefixo.substring(0, 5);
        }
        obj.setPrefixo(prefixo);
    }
    
    public Telefone TelefoneDataOnDemand.getSpecificTelefone(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        Telefone obj = data.get(index);
        Long id = obj.getId();
        return Telefone.findTelefone(id);
    }
    
    public Telefone TelefoneDataOnDemand.getRandomTelefone() {
        init();
        Telefone obj = data.get(rnd.nextInt(data.size()));
        Long id = obj.getId();
        return Telefone.findTelefone(id);
    }
    
    public boolean TelefoneDataOnDemand.modifyTelefone(Telefone obj) {
        return false;
    }
    
    public void TelefoneDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = Telefone.findTelefoneEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'Telefone' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<Telefone>();
        for (int i = 0; i < 10; i++) {
            Telefone obj = getNewTransientTelefone(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
